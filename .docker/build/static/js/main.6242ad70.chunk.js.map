{"version":3,"sources":["components/header.tsx","assets/images/houses.png","components/footer.tsx","config/logging.ts","config/config.ts","Map/Map.tsx","db/firebase.ts","components/Sorters.tsx","components/SearchInput.tsx","hooks/useDebounce.ts","components/WidgetCard.tsx","components/Filters.tsx","pages/buildings.tsx","utils/GoogleMapsUtils.ts","utils/genericSearch.ts","utils/genericFilter.ts","utils/genericSort.ts","config/routes.ts","pages/home.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Navbar","variant","Nav","to","Link","Footer","src","houses","alt","DEFAULT_NAMESPACE","defaults","namespace","getDate","Date","toISOString","logging","info","message","console","log","warn","error","Markers","Map","mapType","mapTypeControl","filteredBuildings","ref","useRef","useState","map","setMap","useEffect","defaultMapStart","defaultAddress","google","maps","LatLng","initMap","zoomLevel","address","current","zoom","center","streetViewControl","rotateControl","scaleControl","fullscreenControl","panControl","zoomControl","gestureHandling","mapTypeId","draggableCursor","clearMarkers","i","length","setMapOnAll","addMarker","building","marker","Marker","position","lat","lng","animation","Animation","DROP","push","drop","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Sorters","props","object","onChangeSorter","htmlFor","id","onChange","event","target","value","split","defaultValue","Object","keys","key","SearchInput","searchQuery","setSearchQuery","onChangeSearchQuery","debouncedSearchQuery","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","undefined","type","placeholder","aria-label","WidgetCard","buildingName","phone","residentialTargetedArea","totalRestrictedUnits","studioUnits","oneBedroomUnits","twoBedroomUnits","threePlusBedroomUnits","urlforBuilding","number","street","city","state","zip","href","Filters","filters","onChangeFilter","labelTruthy","labelFalsy","styledKey","isTruthyPicked","label","checked","x","filter","property","getChecked","getRadioButton","withRouter","scriptLoaded","setScriptLoaded","widgets","setWidgets","setLoading","refB","firestore","collection","onSnapshot","querySnapshot","items","forEach","doc","data","mapsURL","scripts","document","getElementsByTagName","indexOf","googleMapScript","createElement","async","defer","window","body","appendChild","loadMapApi","addEventListener","query","setQuery","isDescending","activeSorter","setActiveSorter","activeFilters","setActiveFilters","resultWidgets","widget","properties","some","toString","toLowerCase","includes","genericSearch","every","sort","widgetA","widgetB","objectA","objectB","sorter","result","genericSort","setMessage","name","match","params","changedFilterProperty","MapTypeId","ROADMAP","routes","path","component","role","exact","BuildingsPage","Application","route","index","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6242ad70.chunk.js","sourcesContent":["import { Navbar, Nav, NavLink, Form, FormControl, Button, Image, Table } from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nexport const Header = () => {\n  return (\n    <div className=\"navbar\">\n      <Navbar variant=\"light\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer to='/'>\n            <Nav.Link><strong>MFTE Simple</strong></Nav.Link>\n          </LinkContainer>\n          <LinkContainer to='/buildings'>\n            <Nav.Link>All Buildings</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to='/about-mfte'>\n            <Nav.Link>About MFTE</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to='/about-mfte-simple'>\n            <Nav.Link>About this app</Nav.Link>\n          </LinkContainer>\n          {/* <LinkContainer to='./pages/about'>\n            <Nav.Link>About</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to='./pages/about'>\n            <Nav.Link>About</Nav.Link>\n          </LinkContainer> */}\n        </Nav>\\\n      </Navbar>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/houses.6ad98ee6.png\";","import houses from '../assets/images/houses.png';\nexport const Footer = () => {\n  return (\n    <div>\n\n<img className=\"img-fluid\" src={houses} alt=\"Seattle skyline\" />\n<div className=\"text-center\">Copyright © 2021 Anya Tokar</div>\n</div>\n\n\n  )\n}","import config from './config';\n\nconst DEFAULT_NAMESPACE = config.defaults.namespace;\n\nconst info = (message: any, namespace?: string) => {\n    if (typeof message === 'string') {\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO] ${message}`);\n    } else {\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO]`, message);\n    }\n};\n\nconst warn = (message: any, namespace?: string) => {\n    if (typeof message === 'string') {\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN] ${message}`);\n    } else {\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN]`, message);\n    }\n};\n\nconst error = (message: any, namespace?: string) => {\n    if (typeof message === 'string') {\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR] ${message}`);\n    } else {\n        console.log(`[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR]`, message);\n    }\n};\n\nconst getDate = () => {\n    return new Date().toISOString();\n};\n\nconst logging = {\n    info,\n    warn,\n    error\n}\n\nexport default logging;","const config = {\n    defaults: {\n        namespace: 'Application'\n    }\n}\n\nexport default config;","import React, {useEffect, useRef, useState} from 'react';\nimport './Map.scss';\nimport 'firebase/firestore';\nimport IMap from \"../interfaces/IMap\";\nimport IWidget from '../interfaces/IWidget';\n\ntype GoogleLatLng = google.maps.LatLng;\ntype GoogleMap = google.maps.Map;\ntype InfoWindow = google.maps.InfoWindow;\n\nlet Markers:any = [];\n\nconst Map: React.FC<IMap> = ({ mapType, mapTypeControl = false, filteredBuildings}) => {\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<GoogleMap>();\n  // const [infoWindow, setInfoWindow] = useState<InfoWindow>();\n\n  const startMap = (): void => {\n    if (!map) {\n      defaultMapStart();\n      console.log(\"hello\")\n      // check to see if this is running\n    }\n  };\n\n  useEffect(startMap, [map]);\n\n  const defaultMapStart = (): void => {\n    const defaultAddress = new google.maps.LatLng(47.608013, -122.335167);\n    initMap(12, defaultAddress);\n  };\n\n  const initMap = (zoomLevel: number, address: GoogleLatLng): void => {\n    if (ref.current) {\n      setMap( \n        new google.maps.Map(ref.current, {\n          zoom: zoomLevel,\n          center: address,\n          mapTypeControl: mapTypeControl,\n          streetViewControl: false,\n          rotateControl: false,\n          scaleControl: true,\n          fullscreenControl: false,\n          panControl: false,\n          zoomControl: true,\n          gestureHandling: 'cooperative',\n          mapTypeId: mapType,\n          draggableCursor: 'pointer',\n        })\n      )\n    }\n  };\n\n  function setMapOnAll(map: google.maps.Map | null) {\n    for (let i = 0; i < Markers.length; i++) {\n      Markers[i].setMap(map);\n    }\n  }\n  \n  function clearMarkers() {\n    setMapOnAll(null);\n  }\n\n  function deleteMarkers() {\n    clearMarkers();\n    Markers = [];\n  }\n\n  drop(filteredBuildings)\n\n  function drop(filteredBuildings:Array<IWidget>) {\n    deleteMarkers();\n    for (var i = 0; i < filteredBuildings.length; i++) {\n      addMarker(filteredBuildings[i]);\n    }\n  }\n\n  function addMarker(building:IWidget) {\n    const marker = new google.maps.Marker({ \n      position: new google.maps.LatLng({lat: building.lat, lng: building.lng}),\n      map: map,\n      animation: google.maps.Animation.DROP,\n    })\n    Markers.push(marker);\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div ref={ref} className=\"map-container__map\"></div>\n    </div>\n  );\n};\n\nexport default Map;","import firebase from 'firebase/app'\nimport \"firebase/database\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_DB,\n  projectId: process.env.REACT_APP_PID,\n  storageBucket: process.env.REACT_APP_SB,\n  messagingSenderId: process.env.REACT_APP_SID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MID\n};\n\nfirebase.initializeApp(firebaseConfig);\n// const databaseRef = firebase.database().ref();\n// export const buildingsRef = databaseRef.child(\"buildings\")\nexport default firebase;","import * as React from \"react\";\n\nexport interface ISortersProps<T> {\n  object: T;\n  onChangeSorter: (\n    sortProperty: keyof T,\n    isDescending: boolean\n  ) => void;\n}\n\nexport default function Sorters<T>(props: ISortersProps<T>) {\n  const { object, onChangeSorter } = props;\n  return (\n    <>\n      <label htmlFor=\"sorters\" className=\"mt-3\"></label>\n      <select\n        id=\"sorters\"\n        className=\"custom-select form-control w-50\"\n        onChange={(event) =>\n          onChangeSorter(\n            event.target.value.split(\",\")[0] as any,\n            event.target.value.split(\",\")[1] === \"true\"\n          )\n        }\n        defaultValue={[\"title\", \"true\"]}\n      >\n        {Object.keys(object).map((key) => {\n          if (!key) {\n            return <></>\n          }\n          if (key === 'buildingName') {\n            return (\n              <>\n                <option\n                  key={`${key}-true`}\n                  value={[key, \"true\"]}\n                >\n                  {/* sort by '{key}' descending */}\n                  sort descending by building name\n                </option>\n                <option\n                  key={`${key}-false`}\n                  value={[key, \"false\"]}\n                >\n                  {/* sort by '{key}' ascending */}\n                  sort ascending by building name\n                </option>\n              </>\n            );\n          }\n\n        })}\n      </select>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport useDebounce from \"../hooks/useDebounce\";\n\nexport interface ISearchProps {\n  onChangeSearchQuery: (searchQuery: string) => void;\n}\n\nexport default function SearchInput(props: ISearchProps) {\n  const [searchQuery, setSearchQuery] = useState<string | undefined>();\n  const { onChangeSearchQuery } = props;\n  const debouncedSearchQuery = useDebounce(searchQuery, 300);\n\n  useEffect(() => {\n    if (debouncedSearchQuery !== undefined) {\n      onChangeSearchQuery(debouncedSearchQuery);\n    }\n  }, [debouncedSearchQuery, onChangeSearchQuery]);\n\n  return (\n    <>\n      <label htmlFor=\"search\" className=\"mt-3\">Enter neighborhood, building name, street address, or zip code:</label>\n      <input\n        id=\"search\"\n        className=\"form-control w-50\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        onChange={(event) => setSearchQuery(event.target.value)}\n      />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// Taken from https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value: any, delay: number) {\n\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        }\n    );\n\n    return debouncedValue;\n}\n","import * as React from \"react\";\nimport Moment from \"react-moment\";\nimport IWidget from \"../interfaces/IWidget\";\n\nexport function WidgetCard(props: IWidget) {\n  const {\n    buildingName,\n    phone,\n    residentialTargetedArea,\n    totalRestrictedUnits,\n    studioUnits,\n    oneBedroomUnits, \n    twoBedroomUnits,\n    threePlusBedroomUnits,\n    urlforBuilding,\n    number,\n    street, \n    city,\n    state, \n    zip,\n  } = props;\n  return (\n    <div className=\"col-12 p-3\">\n      <div>\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">{buildingName}</h1>\n          <p className=\"card-text\">Neighborhood: {residentialTargetedArea}</p>\n          <p className=\"card-text\">Address: {number} {street}, {city}, {state} {zip}</p>\n          <p className=\"card-text\">Total Resticted Units: {totalRestrictedUnits}</p>\n          <p className=\"card-text font-italic\">Studios: {studioUnits}</p>\n          <p className=\"card-text font-italic\">One bedrooms: {oneBedroomUnits}</p>\n          <p className=\"card-text font-italic\">Two bedrooms: {twoBedroomUnits}</p>\n          <p className=\"card-text font-italic\">Three+ bedrooms: {threePlusBedroomUnits}</p>\n        </div>\n        <div className=\"card-footer text-muted text-right\">\n          <span className=\"float-left\">{<a href={urlforBuilding}>{urlforBuilding}</a>}</span> Phone number: {phone}\n        </div>\n      </div>\n    </div>\n  );\n}","import * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport IFilter from \"../interfaces/IFilter\";\n\nexport interface IFiltersProps<T> {\n  object: T;\n  filters: Array<IFilter<T>>;\n  onChangeFilter: (\n    filterProperty: keyof T,\n    checked: boolean,\n    isTruthyPicked: boolean\n  ) => void;\n}\n\nexport function Filters<T>(props: IFiltersProps<T>) {\n  const { object, filters, onChangeFilter } = props;\n\n  const labelTruthy = (\n    <>\n      {/* offered */}\n    </>\n  );\n\n  const labelFalsy = (\n    <>\n      is <b>falsy</b>\n    </>\n  );\n\n  return (\n    <div className=\"p-1 my-2\">\n      \n      <label className=\"mt-3\">Filter by number of bedrooms:</label>\n      {Object.keys(object).map((key) => {\n        if (key !== 'studioUnits' && \n            key !== 'oneBedroomUnits' && \n            key !== 'twoBedroomUnits' && \n            key !== 'threePlusBedroomUnits') \n            { return ('')}\n        \n        let styledKey = ''\n\n        if (key === 'studioUnits') { \n          styledKey = 'Studios'\n        } else if (key === 'oneBedroomUnits') {\n          styledKey = 'One bedrooms'\n        } else if (key === 'twoBedroomUnits') {\n          styledKey = 'Two bedrooms' \n        } else if (key === 'threePlusBedroomUnits') {\n          styledKey = 'Three or more bedrooms' \n        }\n\n\n        const getRadioButton = (isTruthyPicked: boolean): ReactNode => {\n          const id = isTruthyPicked\n            ? `radio-defined-${key}`\n            : `radio-not-defined-${key}`;\n          const label = isTruthyPicked\n            ? labelTruthy\n            : labelFalsy;\n\n          const getChecked = () => {\n            const x = filters.filter(x => x.property === key);\n            return x.length === 1 && x[0].isTruthyPicked === isTruthyPicked;\n          }\n\n          return (\n            <>\n              <input\n                type=\"checkbox\"\n                id={id}\n                value={key}\n                checked={getChecked()}\n                onChange={(event) =>\n                  onChangeFilter(key as any, event.target.checked, isTruthyPicked)\n                }\n                className={\"m-1 ml-3\"}\n              />\n              <label htmlFor={id}>\n                {styledKey}  {label}\n              </label>\n            </>\n          );\n        };\n\n        return (\n          <div key={key} className=\"input-group my-3\">\n            {getRadioButton(true)}\n            {/* {getRadioButton(false)} */}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport IPage from '../interfaces/page';\nimport logging from '../config/logging';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { BuildingsTable } from \"../components/buildingsTable\"\nimport Map from \"../Map/Map\";\nimport { loadMapApi } from \"../utils/GoogleMapsUtils\";\nimport firebase from '../db/firebase';\nimport 'firebase/firestore';\n\n\nimport Sorters from \"../components/Sorters\";\nimport SearchInput from \"../components/SearchInput\";\nimport { WidgetCard } from \"../components/WidgetCard\";\nimport IWidget from \"../interfaces/IWidget\";\n// import widgets from \"../db/widgets\";\nimport { genericSort } from \"../utils/genericSort\";\nimport { genericSearch } from \"../utils/genericSearch\";\nimport { genericFilter } from \"../utils/genericFilter\";\nimport { Filters } from \"../components/Filters\";\nimport IFilter from \"../interfaces/IFilter\";\nimport ISorter from \"../interfaces/ISorter\";\n\nconst BuildingsPage: React.FunctionComponent<IPage & RouteComponentProps<any>> = props => {\n\n  const [scriptLoaded, setScriptLoaded] = useState(false);\n  const [widgets, setWidgets] = useState([] as Array<IWidget>);\n\n  // const [buildings, setBuildings] = useState([] as any);\nconst [loading, setLoading] = useState(false);\n\nconst refB = firebase.firestore().collection(\"buildings\");\n\nfunction getBuildings() {\n  setLoading(true);\n  refB.onSnapshot((querySnapshot) => {\n    const items: Array<IWidget> = [];\n    querySnapshot.forEach((doc) => {\n        items.push(doc.data() as IWidget);\n        // console.log(doc.data())\n    });\n    setWidgets(items)\n\n    setLoading(false)\n  });\n}\n\nuseEffect(() => {\n    getBuildings();\n}, []);\n\n  useEffect(() => {\n    const googleMapScript = loadMapApi();\n    googleMapScript.addEventListener('load', function () {\n      setScriptLoaded(true);\n      console.log('code is running!!!!!')\n    });\n  }, []);\n\n  const [query, setQuery] = useState<string>(\"\");\n  const [activeSorter, setActiveSorter] = useState<ISorter<IWidget>>({\n    property: \"buildingName\",\n    isDescending: false,\n  });\n  const [activeFilters, setActiveFilters] = useState<Array<IFilter<IWidget>>>(\n    []\n  );\n\n  const resultWidgets = widgets\n    .filter((widget) =>\n      genericSearch<IWidget>(widget, [\"buildingName\", \"residentialTargetedArea\", \"number\", \"street\", \"zip\"], query)\n    )\n    .filter((widget) => genericFilter<IWidget>(widget, activeFilters))\n    .sort((widgetA, widgetB) =>\n      genericSort<IWidget>(widgetA, widgetB, activeSorter)\n    );\n\n\n  const [message, setMessage] = useState<string>('');\n\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`);\n\n    let number = props.match.params.number;\n\n    if (number)\n    {\n      setMessage(`The Number is ${number}`);\n    }\n    else\n    {\n      setMessage(`No number provided!`);\n    }\n  }, [props])\n\n  return (\n    <div>\n      {/* search sort filter container */}\n      <div className=\"container mx-auto my-2\">\n        {/* search */}\n        <SearchInput onChangeSearchQuery={(query) => setQuery(query)} />\n        {/* sort */}\n        {widgets.length > 0 && <Sorters<IWidget>\n        \n          object={widgets[0]}\n          onChangeSorter={(property, isDescending) => {\n            setActiveSorter({\n              property,\n              isDescending,\n            });\n          }}\n        />}\n        {/* filter */}\n        {widgets.length > 0 && <Filters<IWidget>\n          object={widgets[0]}\n          filters={activeFilters}\n          onChangeFilter={(changedFilterProperty, checked, isTruthyPicked) => {\n            checked\n              ? setActiveFilters([\n                  ...activeFilters.filter(\n                    (filter) => filter.property !== changedFilterProperty\n                  ),\n                  { property: changedFilterProperty, isTruthyPicked },\n                ])\n              : setActiveFilters(\n                  activeFilters.filter(\n                    (filter) => filter.property !== changedFilterProperty\n                  )\n                );\n          }}\n        />}\n      </div>\n\n      {/* map */}\n      <div>\n        {scriptLoaded && (\n          <Map\n            mapType={google.maps.MapTypeId.ROADMAP}\n            mapTypeControl={true}\n            filteredBuildings={resultWidgets}\n          />\n        )}\n      </div>\n\n      {/* building list */}\n      <div className=\"container mx-auto my-2\">\n        <h3>Search results:</h3>\n        {resultWidgets.length > 0 && (\n          <div className=\"row\">\n            {resultWidgets.map((widget) => (\n              <WidgetCard key={widget.buildingName} {...widget} />\n            ))}\n          </div>\n        )}\n        {resultWidgets.length === 0 && <p>No results found!</p>}\n        {/* <p>{message}</p>\n        <Link to=\"/\">Go to the home page!</Link> */}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(BuildingsPage);","export const loadMapApi = () => {\n  const mapsURL = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_APIKEY}&libraries=places&language=en&v=quarterly`;\n  const scripts = document.getElementsByTagName('script');\n  // Go through existing script tags, and return google maps api tag when found.\n  for (let i = 0; i < scripts.length; i++) {\n      if (scripts[i].src.indexOf(mapsURL) === 0) {\n          return scripts[i];\n      }\n  }\n\n  const googleMapScript = document.createElement('script');\n  googleMapScript.src = mapsURL;\n  googleMapScript.async = true;\n  googleMapScript.defer = true;\n  window.document.body.appendChild(googleMapScript);\n\n  return googleMapScript;\n};\n\n\n","// case insensitive search of n-number properties of type T\n// returns true if at least one of the property values includes the query value\nexport function genericSearch<T>(\n    object: T,\n    properties: Array<keyof T>,\n    query: string\n): boolean {\n\n    if (query === \"\") {\n        return true;\n    } \n\n    return properties.some((property) => {\n        const value = object[property];\n        if (typeof value === \"string\" || typeof value === \"number\") {\n            return value.toString().toLowerCase().includes(query.toLowerCase());\n        }\n        return false;\n    });\n}","import IFilter from \"../interfaces/IFilter\";\n\n// filter n properties for truthy or falsy values on type T (no effect if no filter selected)\nexport function genericFilter<T>(object: T, filters: Array<IFilter<T>>) {\n  // no filters; no effect - return true\n  if (filters.length === 0) {\n    return true;\n  }\n\n  return filters.every((filter) => {\n    return filter.isTruthyPicked ? object[filter.property] : !object[filter.property];\n  });\n}\n","import ISorter from \"../interfaces/ISorter\";\n\n// comparator function for any property within type T\n// works for: strings, numbers, and Dates (and is typed to accept only properties which are those types)\n// could be extended for other types but would need some custom comparison function here\nexport function genericSort<T>(\n  objectA: T,\n  objectB: T,\n  sorter: ISorter<T>\n) {\n  const result = () => {\n    if (objectA[sorter.property] > objectB[sorter.property]) {\n        return 1;\n    } else if (objectA[sorter.property] < objectB[sorter.property]) {\n        return -1;\n    } else {\n        return 0;\n    }\n  }\n\n  return sorter.isDescending ? result() * -1 : result();\n}\n","import IRoute from '../interfaces/route';\nimport BuildingsPage from '../pages/buildings';\nimport HomePage from '../pages/home';\n\nconst routes: IRoute[] = [\n    {\n        path: '/',\n        name: 'Home Page',\n        component: HomePage,\n        exact: true\n    },\n    {\n        path: '/buildings',\n        name: 'Buildings Page',\n        component: BuildingsPage,\n        exact: true\n    },\n    {\n        path: '/buildings/:number',\n        name: 'Building Details Page',\n        component: BuildingsPage,\n        exact: true\n    },\n]\n\nexport default routes;","import React, { useEffect, useState } from 'react';\nimport IPage from '../interfaces/page';\nimport logging from '../config/logging';\nimport seattle from '../assets/images/seattle.jpg';\nimport SearchInput from \"../components/SearchInput\";\nimport { genericSearch } from \"../utils/genericSearch\";\n\nconst HomePage: React.FunctionComponent<IPage> = props => {\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`);\n  }, [props.name])\n\n  const [query, setQuery] = useState<string>(\"\");\n\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">MFTE Simple</h1>\n        <p className=\"lead\">\n          Find safe, comfortable, and affordable apartments for rent in Seattle.\n        </p>\n        {/* <hr className=\"my-4\"></hr> */}\n        <p className=\"lead\">\n          <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Search Buildings</a>\n          <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">About MFTE</a>\n        </p>\n      </div>\n    </div>\n\n    // <section className=\"text-center slogan\">\n    //   {/* <div className=\"container\">\n    //     <div className=\"row\">\n    //       <div className=\"col\"></div>\n    //         <div className=\"col-9\"> */}\n    //           <p>\n    //             Find safe, comfortable, and affordable apartments for rent in Seattle.\n    //           </p>\n    //           {/* <p>\n    //             It focuses on the MFTE (Multifamily Tax Exemption) program because of the relatively quick application turnaround, high availability, and desirable buildings and locations of homes.\n    //           </p>\n    //           <p>\n    //             All data is sourced from the list of properties participating in the MFTE and Incentive Zoning programs most recently updated by the City of Seattle Office of Housing on 12/31/2020.\n    //           </p> */}\n    //         {/* </div>\n    //         <div className=\"col\"></div>\n    //       </div>\n    //     </div> */}\n    //   <div className=\"wrapper\">\n    //   {/* <img className=\"img-fluid\" src={seattle} alt=\"Seattle skyline\" /> */}\n    // </div>\n    // </section>\n  )\n}\n\nexport default HomePage;","import React, { useEffect, useState } from 'react';\nimport { Header } from './components/header';\nimport { Footer } from './components/footer';\nimport { BrowserRouter, Route, Switch, RouteComponentProps } from 'react-router-dom';\nimport logging from './config/logging';\nimport routes from './config/routes';\n\nimport Sorters from \"./components/Sorters\";\nimport SearchInput from \"./components/SearchInput\";\nimport { WidgetCard } from \"./components/WidgetCard\";\nimport IWidget from \"./interfaces/IWidget\";\nimport widgets from \"./db/widgets\";\nimport { genericSort } from \"./utils/genericSort\";\nimport { genericSearch } from \"./utils/genericSearch\";\nimport { genericFilter } from \"./utils/genericFilter\";\nimport { Filters } from \"./components/Filters\";\nimport IFilter from \"./interfaces/IFilter\";\nimport ISorter from \"./interfaces/ISorter\";\n\nconst Application: React.FunctionComponent<{}> = props => {\n\n\n  // const [query, setQuery] = useState<string>(\"\");\n  // const [activeSorter, setActiveSorter] = useState<ISorter<IWidget>>({\n  //   property: \"buildingName\",\n  //   isDescending: true,\n  // });\n  // const [activeFilters, setActiveFilters] = useState<Array<IFilter<IWidget>>>(\n  //   []\n  // );\n\n  // const resultWidgets = widgets\n  //   .filter((widget) =>\n  //     genericSearch<IWidget>(widget, [\"buildingName\", \"residentialTargetedArea\", \"number\", \"street\", \"zip\"], query)\n  //   )\n  //   .filter((widget) => genericFilter<IWidget>(widget, activeFilters))\n  //   .sort((widgetA, widgetB) =>\n  //     genericSort<IWidget>(widgetA, widgetB, activeSorter)\n  //   );\n\n\n\n\n  useEffect(() => {\n    logging.info('Loading application.');\n  }, [])\n\n  return (\n    <div>\n\n      <BrowserRouter>\n      <Header />\n\n\n\n\n      {/* <div className=\"container mx-auto my-2\">\n      <div className=\"my-3\"> */}\n        {/* <i>\n          From the blog post{\" \"}\n          <a href=\"https://chrisfrewin.com/blog/react-typescript-generic-search-sort-and-filters/\">\n            \"React and TypeScript: Generic Search, Sorters, and Filters\"\n          </a>\n          .\n        </i> */}\n      {/* </div>\n      \n      <SearchInput onChangeSearchQuery={(query) => setQuery(query)} />\n      <Sorters<IWidget>\n        object={widgets[0]}\n        onChangeSorter={(property, isDescending) => {\n          setActiveSorter({\n            property,\n            isDescending,\n          });\n        }}\n      />\n      <Filters<IWidget>\n        object={widgets[0]}\n        filters={activeFilters}\n        onChangeFilter={(changedFilterProperty, checked, isTruthyPicked) => {\n          checked\n            ? setActiveFilters([\n                ...activeFilters.filter(\n                  (filter) => filter.property !== changedFilterProperty\n                ),\n                { property: changedFilterProperty, isTruthyPicked },\n              ])\n            : setActiveFilters(\n                activeFilters.filter(\n                  (filter) => filter.property !== changedFilterProperty\n                )\n              );\n        }}\n      />\n      <h3>Results:</h3>\n      {resultWidgets.length > 0 && (\n        <div className=\"row\">\n          {resultWidgets.map((widget) => (\n            <WidgetCard key={widget.buildingName} {...widget} />\n          ))}\n        </div>\n      )}\n      {resultWidgets.length === 0 && <p>No results found!</p>}\n    </div>\n  ); */}\n\n\n{/* state for map should be tracked here! instead of Map -- loading once bug */}\n\n\n\n        <Switch>\n          {routes.map((route, index) => {\n            return (\n              <Route \n                key={index}\n                path={route.path}\n                exact={route.exact}\n                render={(props: RouteComponentProps<any>) => (\n                  <route.component\n                    name={route.name} \n                    {...props}\n                    {...route.props}\n                  />\n                )}\n              />\n            );\n          })}\n        </Switch>\n      </BrowserRouter>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default Application;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}